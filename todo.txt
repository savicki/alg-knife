
- RTP generator, so expectations can be tested
- support SIPP xml scenarios
- support dialog?
- send schemas, e.g. {10,24,12,40} for 10+24+12+40 byte-long msg, so ring buffers can be pin-tested. As well as stream helpers.

- support placeholders in text messages, e.g. {listen_ip}:{listen_port}, {iter_num}

{{local_ip}}, {{local_port}}
{{remote_ip}}, {{remote_port}}
{{iter_num}}


"file: sip_tcp_invite.txt" can contain {{xxx}} placehodlers, e.g.:

INVITE sip:uac@{{remote_ip}}:5060 SIP/2.0
Via: SIP/2.0/TCP {{local_ip}}:5060;branch=z9hG4bK-16003-1-0
From: sipp <sip:sipp@{{local_ip}}:5060>;tag=16003SIPpTag001
To: uac <sip:uac@{{remote_ip}}:5060>
Call-ID: 1-16003@{{local_ip}}
CSeq: 1 INVITE
Contact: sip:sipp@{{local_ip}}:5060
Max-Forwards: 70
Subject: Performance Test
Content-Type: application/sdp
Content-Length:   131

v=0
o=user1 53655765 2353687637 IN IP4 {{local_ip}}
s=-
c=IN IP4 {{local_ip}}
t=0 0
m=audio {{iter_num+1024}} RTP/AVP 0
a=rtpmap:0 PCMU/8000


"filehex: sccp_tcp_smt.txt" can't contain placehodlers, instead specify them as offset:len:value in "writehex: " file, "readhex: " to 
"filetxt: sip_invite.txt", "readtxt: "

"writehex: "
> # offset:len:value
> 16:4:{{local_ip}}
> 32:4:{{iter_num+1024}}

"readhex: "
> # offset:len:value
> 16:4:{{rtp_remote_ip}}
> 32:4:{{rtp_remote_port}}

"readtxt: "
{{rtp_remote_ip}}
c=IN IP4 (\d+.\d+.\d+.\d+)
{{rtp_remote_port}}
m=audio (\d) RTP/AVP 0


send_buf updated (via "writehex:" or placeholders directly in txt) each time before sending on new iteration

replace_map_txt = 
{
	line:offset:func,
	line:offset:func,
}

replace_map_hex = 
{
	byte_offset:len:func,
	byte_offset:len:func,
}

applyReplaceMap(map, iter, tmpl) // update fields